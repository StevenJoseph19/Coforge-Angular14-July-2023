{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './login/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./login/auth.service\";\nexport let HttpInterceptorService = /*#__PURE__*/(() => {\n  class HttpInterceptorService {\n    constructor(authenticationService) {\n      this.authenticationService = authenticationService;\n    }\n\n    intercept(req, next) {\n      if (this.authenticationService.isUserLoggedIn() && req.url.indexOf('basicauth') === -1) {\n        const authReq = req.clone({\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            'Authorization': `Basic ${window.btoa(this.authenticationService.username + \":\" + this.authenticationService.password)}`\n          })\n        });\n        return next.handle(authReq);\n      } else {\n        return next.handle(req);\n      }\n    }\n\n  }\n\n  HttpInterceptorService.ɵfac = function HttpInterceptorService_Factory(t) {\n    return new (t || HttpInterceptorService)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n\n  HttpInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpInterceptorService,\n    factory: HttpInterceptorService.ɵfac\n  });\n  return HttpInterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module"}